# -*- mode: snippet -*-
# name: btest
# key: btest
# group: testing
# --
#define BOOST_TEST_MODULE ${1:`(file-name-nondirectory (file-name-sans-extension (buffer-file-name)))`}
#include <testsuite/testsuite.hpp>
#endif

#include <feel/feel.hpp>

/** use Feel namespace */
using namespace Feel;

inline
po::options_description makeOptions()
{
    po::options_description options( "Test Options" );
    options.add_options()
        ( "N",po::value<int>()->default_value( 10 ),"N" )
        ;
    return options;
}

inline
AboutData
makeAbout()
{
    AboutData about( "${1:`(file-name-nondirectory (file-name-sans-extension (buffer-file-name)))`}" ,
                     "${1:`(file-name-nondirectory (file-name-sans-extension (buffer-file-name)))`}" ,
                     "0.2",
                     "${1:`(file-name-nondirectory (file-name-sans-extension (buffer-file-name)))`}",
                     Feel::AboutData::License_GPL,
                     "Copyright (c) 2015 Feel++ Consortium" );

    return about;
}

template<int Dim>
class Test:
    public Simget
{
public :

    void run()
        {

        }
};


FEELPP_ENVIRONMENT_WITH_OPTIONS( makeAbout(), makeOptions() );
BOOST_AUTO_TEST_SUITE( ${1:`(file-name-nondirectory (file-name-sans-extension (buffer-file-name)))`} )


BOOST_AUTO_TEST_CASE( test )
{
    Test<3> test;
    test.run();
}


BOOST_AUTO_TEST_SUITE_END()

